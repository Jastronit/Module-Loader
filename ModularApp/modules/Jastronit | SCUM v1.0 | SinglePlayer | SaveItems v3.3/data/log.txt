# filepath: /home/jastronit/Plocha/python/SCUM/ModularApp/modules/Jastronit | SCUM v1.0 | SinglePlayer | SaveItems v3.3/widgets/custom_overlays.py
import os
import json
from PySide6.QtWidgets import (
    QWidget, QVBoxLayout, QPushButton, QLabel, QListWidget
)
from PySide6.QtCore import Qt

def create_widget(BaseClass, module_name):
    class CustomOverlaysWidget(BaseClass):
        def __init__(self):
            super().__init__(module_name)
            layout = QVBoxLayout(self)
            self.setLayout(layout)

            # --- Overlay zoznam ---
            layout.addWidget(QLabel("Custom Overlays:"))
            self.overlay_list = QListWidget()
            layout.addWidget(self.overlay_list)
            self.load_custom_overlays()

            btn_delete = QPushButton("Delete Selected Overlay")
            btn_delete.clicked.connect(self.delete_selected_overlay)
            layout.addWidget(btn_delete)

            btn_save = QPushButton("Save Overlay")
            btn_save.clicked.connect(self.save_overlay)
            layout.addWidget(btn_save)

        def load_custom_overlays(self):
            config_path = os.path.join("modules", self.module_name, "config", "custom_overlays.json")
            if os.path.exists(config_path):
                with open(config_path, "r") as f:
                    overlays = json.load(f)
                    for overlay in overlays:
                        self.overlay_list.addItem(overlay)

        def save_overlay(self):
            overlay_name = self.overlay_list.currentItem().text() if self.overlay_list.currentItem() else None
            if overlay_name:
                # Uloženie pozície a veľkosti overlayu
                overlay_data = {
                    "name": overlay_name,
                    "params": {
                        "x": 100,  # Tu by ste mali získať aktuálnu pozíciu
                        "y": 100,
                        "w": 400,
                        "h": 300,
                        "bg": "rgba(0,0,0,0)"  # Tu by ste mali získať aktuálnu farbu pozadia
                    }
                }
                config_path = os.path.join("modules", self.module_name, "config", "custom_overlays.json")
                with open(config_path, "a") as f:
                    json.dump(overlay_data, f)
                    f.write("\n")
                self.overlay_list.addItem(overlay_name)

        def delete_selected_overlay(self):
            selected_item = self.overlay_list.currentItem()
            if selected_item:
                overlay_name = selected_item.text()
                self.overlay_list.takeItem(self.overlay_list.row(selected_item))
                self.remove_overlay_from_config(overlay_name)

        def remove_overlay_from_config(self, overlay_name):
            config_path = os.path.join("modules", self.module_name, "config", "custom_overlays.json")
            if os.path.exists(config_path):
                with open(config_path, "r") as f:
                    overlays = json.load(f)
                overlays = [o for o in overlays if o["name"] != overlay_name]
                with open(config_path, "w") as f:
                    json.dump(overlays, f)

    return CustomOverlaysWidget()

def get_widget_dock_position():
    return Qt.RightDockWidgetArea, 1